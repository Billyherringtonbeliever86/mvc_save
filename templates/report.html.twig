{% extends "base.html.twig" %}

{% block title %}Reports{% endblock %}

{% block body %}
    <div class="split-container">
        
        <div class = "aside">
            <h1> Kursmoment </h1>
            <ul>
                <li><a href="#kmom01"> Kmom01</a></li>
            </ul>
        </div>
        
        <div class = "main">
            <div id="kmom01">
                <h1> Kmom01 </h1>

                <p>
                    Vi har nu programmerat 3 kurser i obektorientering i språken javascript, python och nu php.
                    Strukturen har varit sig lik och jag känner att man lärst sig mycket med o-orienterat. Så man har en ganska
                    bra bild av hur det funkar, men det kan alltid bli mer invecklat.
                    oo i php är likt andra språk och har dem väsentliga delarna som Metoder, konstruktor, egenskaper, inkaplsulering, klasser, objekt och instans
                    kan man dessa viktiga beståndsdelar så är man på god väg och kan dem viktiga grunderna in objekt orientering i php.
                    Sen bör man förstå default parametrar export/import och initiering för att hantera objekten bra.
                    Kod strukturen är sig lik men skiljer sig mer från js och python. Namespacing är en ny teknik och hur själva framworket i sig
                    själv använder controllers känns lite udda en så länge. Controllerserna eller routsen skiljer sig lite också från tex express routes.
                    Dem har inget req res objekt som parametrar man får istället göra ett response objekt i kontrollern. I php the rightway läste jag på om 
                    Namespaces för att förstå dem sedan om "the basics" som time funktioner. Jag skulle vilja veta mer om hur man får fram tex query data 
                    och data liknakde ett req objekt. Mitt TIL är att Namespacing är viktigt när det blir stora libraries så classer inte krockar.
                </p>
            </div>

             <div id="kmom02">
                <h1> Kmom02 </h1>

                <p>
                   Förklara kort de objektorienterade konstruktionerna arv, komposition, interface och trait och hur de används i PHP.
                   Arv gör man genom metoden "extends" i php det gör så att allt i från bas klassen
                   ärvs in i den extendade klassen även fast koden i syns där. Den är en så kallad komposition som är koppling mellan dessa 2 klasser.
                   Ett trait är ett nästam som ett arv och den definerar generela klasser eller variabler
                   som kan användas och importeras individuellt till flera klasser utan att han någon relation mellan olika importer.
                    Interface är som ett kontrakt eller mall som när implementerar kräver att de variable eller funktioner som är definerade i interfacet ska finnas i denna klass.

                </p>
                <p>
                Berätta om din implementation från uppgiften. Hur löste du uppgiften, är du nöjd/missnöjd, vilken förbättringspotential ser du i din koden och dina klasser?
                Uppgiften tog väldigt lång tid men jag är väldigt nöjd med hantering av session och klass struktur. Jag ser att en klass i DeckOfCards kan läggas till som gör Draw()
                en input amount of times. Jag är mestadelsnöjd men satt fast länge på och funderade över JSON apiet /api/deck/draw/number. problemet var att det skulle vara i post
                och kände att jag inte hade beredskap att hantera detta problem så fick testa mycket och det var frusterande. Kanske hade behövts mer i geomgången kring detta.
                </p>
                <p>
                    Vilka är dina reflektioner så här långt med att jobb i Symfony med applikationskod enligt MVC?
                    Det känns lite klurigare jämfört med andra routing tekniker som vi använt. Känns även väldigt mycket svårare att felsöka i php eftersom det inte 
                    stödjer för konsol utskrifter särskillt bra så allt blir bara en stor röra som printas i html dokumentet. väldigt praktiskt dock med twig och olika controller
                    variabler som name som kan användas av path metoden i twig.
                </p>
                <p>
                    Vilken är din TIL för detta kmom?
                    MItt TIL är att php till skilnad från många andra språk har en array metod shuffle() som randomiserar index positionerna i en array.
                    Kom in behövligt i detta kmom.
                </p>
            </div>

        </div>
    </div>


{% endblock %}
